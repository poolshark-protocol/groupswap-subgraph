// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DepositedToGroup extends ethereum.Event {
  get params(): DepositedToGroup__Params {
    return new DepositedToGroup__Params(this);
  }
}

export class DepositedToGroup__Params {
  _event: DepositedToGroup;

  constructor(event: DepositedToGroup) {
    this._event = event;
  }

  get fromToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get destToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get userGas(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class GroupExecuted extends ethereum.Event {
  get params(): GroupExecuted__Params {
    return new GroupExecuted__Params(this);
  }
}

export class GroupExecuted__Params {
  _event: GroupExecuted;

  constructor(event: GroupExecuted) {
    this._event = event;
  }

  get groupId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get returnAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WithdrawDeclined extends ethereum.Event {
  get params(): WithdrawDeclined__Params {
    return new WithdrawDeclined__Params(this);
  }
}

export class WithdrawDeclined__Params {
  _event: WithdrawDeclined;

  constructor(event: WithdrawDeclined) {
    this._event = event;
  }

  get groupId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenRequested(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class WithdrawRequested extends ethereum.Event {
  get params(): WithdrawRequested__Params {
    return new WithdrawRequested__Params(this);
  }
}

export class WithdrawRequested__Params {
  _event: WithdrawRequested;

  constructor(event: WithdrawRequested) {
    this._event = event;
  }

  get depositTxnHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get gas(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get withdrawToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class WithdrawnFromGroupPost extends ethereum.Event {
  get params(): WithdrawnFromGroupPost__Params {
    return new WithdrawnFromGroupPost__Params(this);
  }
}

export class WithdrawnFromGroupPost__Params {
  _event: WithdrawnFromGroupPost;

  constructor(event: WithdrawnFromGroupPost) {
    this._event = event;
  }

  get groupId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrawnFromGroupPre extends ethereum.Event {
  get params(): WithdrawnFromGroupPre__Params {
    return new WithdrawnFromGroupPre__Params(this);
  }
}

export class WithdrawnFromGroupPre__Params {
  _event: WithdrawnFromGroupPre;

  constructor(event: WithdrawnFromGroupPre) {
    this._event = event;
  }

  get groupId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GroupSwap extends ethereum.SmartContract {
  static bind(address: Address): GroupSwap {
    return new GroupSwap("GroupSwap", address);
  }

  estimateGasRequirements(
    fromToken: Address,
    destToken: Address,
    amount: BigInt,
    gasPrice: BigInt
  ): BigInt {
    let result = super.call(
      "estimateGasRequirements",
      "estimateGasRequirements(address,address,uint256,uint64):(uint256)",
      [
        ethereum.Value.fromAddress(fromToken),
        ethereum.Value.fromAddress(destToken),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(gasPrice)
      ]
    );

    return result[0].toBigInt();
  }

  try_estimateGasRequirements(
    fromToken: Address,
    destToken: Address,
    amount: BigInt,
    gasPrice: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "estimateGasRequirements",
      "estimateGasRequirements(address,address,uint256,uint64):(uint256)",
      [
        ethereum.Value.fromAddress(fromToken),
        ethereum.Value.fromAddress(destToken),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(gasPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGroup(fromToken: Address, destToken: Address): Bytes {
    let result = super.call("getGroup", "getGroup(address,address):(bytes32)", [
      ethereum.Value.fromAddress(fromToken),
      ethereum.Value.fromAddress(destToken)
    ]);

    return result[0].toBytes();
  }

  try_getGroup(
    fromToken: Address,
    destToken: Address
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getGroup",
      "getGroup(address,address):(bytes32)",
      [
        ethereum.Value.fromAddress(fromToken),
        ethereum.Value.fromAddress(destToken)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _contractOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _predaDex(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class ApproveWithdrawRequestCall extends ethereum.Call {
  get inputs(): ApproveWithdrawRequestCall__Inputs {
    return new ApproveWithdrawRequestCall__Inputs(this);
  }

  get outputs(): ApproveWithdrawRequestCall__Outputs {
    return new ApproveWithdrawRequestCall__Outputs(this);
  }
}

export class ApproveWithdrawRequestCall__Inputs {
  _call: ApproveWithdrawRequestCall;

  constructor(call: ApproveWithdrawRequestCall) {
    this._call = call;
  }

  get withdrawToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get receiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ApproveWithdrawRequestCall__Outputs {
  _call: ApproveWithdrawRequestCall;

  constructor(call: ApproveWithdrawRequestCall) {
    this._call = call;
  }
}

export class DeclineWithdrawRequestCall extends ethereum.Call {
  get inputs(): DeclineWithdrawRequestCall__Inputs {
    return new DeclineWithdrawRequestCall__Inputs(this);
  }

  get outputs(): DeclineWithdrawRequestCall__Outputs {
    return new DeclineWithdrawRequestCall__Outputs(this);
  }
}

export class DeclineWithdrawRequestCall__Inputs {
  _call: DeclineWithdrawRequestCall;

  constructor(call: DeclineWithdrawRequestCall) {
    this._call = call;
  }

  get group(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenRequested(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class DeclineWithdrawRequestCall__Outputs {
  _call: DeclineWithdrawRequestCall;

  constructor(call: DeclineWithdrawRequestCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get fromToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get destToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class PerformUpkeepCall extends ethereum.Call {
  get inputs(): PerformUpkeepCall__Inputs {
    return new PerformUpkeepCall__Inputs(this);
  }

  get outputs(): PerformUpkeepCall__Outputs {
    return new PerformUpkeepCall__Outputs(this);
  }
}

export class PerformUpkeepCall__Inputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }

  get performData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PerformUpkeepCall__Outputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }
}

export class RequestWithdrawCall extends ethereum.Call {
  get inputs(): RequestWithdrawCall__Inputs {
    return new RequestWithdrawCall__Inputs(this);
  }

  get outputs(): RequestWithdrawCall__Outputs {
    return new RequestWithdrawCall__Outputs(this);
  }
}

export class RequestWithdrawCall__Inputs {
  _call: RequestWithdrawCall;

  constructor(call: RequestWithdrawCall) {
    this._call = call;
  }

  get withdrawToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get group(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get depositTxnHash(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RequestWithdrawCall__Outputs {
  _call: RequestWithdrawCall;

  constructor(call: RequestWithdrawCall) {
    this._call = call;
  }
}
